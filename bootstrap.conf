# Bootstrap configuration.
# vim:ft=sh

# Copyright (C) 2006-2016 Free Software Foundation, Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# prefer GitHub's mirror repo
default_gnulib_url=https://github.com/coreutils/gnulib.git

# Additional gnulib-tool options to use.  Use "\newline" to break lines.
gnulib_tool_option_extras='--avoid=dummy'

# gnulib modules used by this package.
gnulib_modules='
do-release-commit-and-tag
git-version-gen
gitlog-to-changelog
vc-list-files
'

# gnulib overrides; leave build_aux and m4_base set to bootstrap defaults
gnulib_basedir=".$package-gnulib"
source_base="$gnulib_basedir/lib"
doc_base="$gnulib_basedir/doc"
tests_base="$gnulib_basedir/tests"

# File that should exist in the top directory of a checked out hierarchy,
# but not in a distribution tarball.
checkout_only_file=.gitattributes

# Build requirements
buildreq='\
autoconf        2.64
automake        1.12
git             1.8.3
gzip            -
join            -
tar             -
'

# A function to be called for each unrecognized option.  Returns 0 if
# the option in $1 has been processed by the function.  Returns 1 if
# the option has not been processed by the function.  Override it via
# your own definition in bootstrap.conf
bootstrap_option_hook()
{
    local option=$1
    case $option in
	--install-buildreqs) build-aux/install-buildreqs;;
	--install-reqs) build-aux/install-reqs;;
	*) return 1;;
    esac
}

# A function to be called in order to print the --help information
# corresponding to user-defined command-line options.
bootstrap_print_option_usage_hook()
{
    cat <<EOF
 --install-buildreqs      install packages required to build this package
 --install-reqs           install packages required by this package
EOF
}

# additional submodules
submodules='
quickhatch-autotools
'

# A function to be called at the end of autopull.sh.
# Override it via your own definition in bootstrap.conf.
bootstrap_post_pull_hook()
{
  # Update submodules
  for sm in $submodules; do
    sm_path=$(git_modules_config submodule.$sm.path)
    test "x$sm_path" = x && die "Could not determine submodule path for $sm"
    git submodule update --init $sm_path || return 1
  done
}

# A function to be called after everything else in this script.
# Override it via your own definition in bootstrap.conf.
bootstrap_epilogue()
{
  # Automake requires that ChangeLog exist.
  touch ChangeLog || return 1
}
