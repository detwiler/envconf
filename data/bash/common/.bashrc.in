# Determin toolbox name
function __toolbox_name()
{
  if [[ -f @TOOLBOX_ENV_FILE@ ]]; then
    if [[ -f @CONTAINER_ENV_FILE@ ]]; then
      toolbox_name=$(source @CONTAINER_ENV_FILE@ && printf $name)
    else
      toolbox_name=$(hostname)
    fi
  else
    toolbox_name=$(hostname)
  fi
    printf "$toolbox_name"
} # toolbox_name()
export -f __toolbox_name

_toolbox_name=$(__toolbox_name)

# Source global definitions
if [ -f "@pkgconfdir@/$_toolbox_name/global-bash" ]; then
  source "@pkgconfdir@/$_toolbox_name/global-bash"
fi

# Enable software collections
if [ -f "@pkgconfdir@/$_toolbox_name/scl-bash" ]; then
  source "@pkgconfdir@/$_toolbox_name/scl-bash"
fi

# User specific aliases and functions
if [ -f "@pkgconfdir@/$_toolbox_name/functions" ]; then
  source "@pkgconfdir@/$_toolbox_name/functions"
fi

# Set PATH so it includes user's private bin dirs if they exist
if type -t pathmung &>/dev/null; then
    pathmung @bindir@
    pathmung @sbindir@
fi

# Add Homebrew directories to PATH
if [ -f "@pkgconfdir@/$_toolbox_name/homebrew-pathmung" ]; then
  source "@pkgconfdir@/$_toolbox_name/homebrew-pathmung"
fi

# Add Windows Python 3 directories to PATH
if [ -f "@pkgconfdir@/$_toolbox_name/win-python-pathmung" ]; then
  source "@pkgconfdir@/$_toolbox_name/win-python-pathmung"
fi

if [ -f "@pkgconfdir@/$_toolbox_name/bashrc" ]; then
  source "@pkgconfdir@/$_toolbox_name/bashrc"
fi

unset _toolbox_name
