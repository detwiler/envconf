# Makefile.am

include $(top_srcdir)/rules.mk

# file/directory variables
cmake = cmake.vim
gvimrc = gvimrc
init = init.vim
map = map.vim
option = option.vim
vimrc = vimrc
vimrc_ycm = vimrc-ycm
vim_plug = vim-plug.vim
vim_plug_ycm = vim-plug-ycm
vimautoloaddir = $(vimdir)/autoload
vimpluggeddir = $(vimdir)/plugged
ycm = ycm.vim
ycm_clangd_binary_path = ycm-clangd-binary-path

# static data/scripts (not generated; require explicit distribution)
vimconf_static_data = $(map) \
		      $(option)
dist_vimconf_DATA = $(vimconf_static_data)

# data/scripts generated by configure (source file automatically distributed)
vim_conf_data =

if HAVE_GVIM
vim_conf_data += $(gvimrc)
endif

vim_DATA = $(vim_conf_data)

vimconf_conf_data =

if ENABLE_YCM
vimconf_conf_data += $(cmake)
vimconf_conf_data += $(ycm)
endif

vimconf_DATA = $(vimconf_conf_data)

DISTCLEANFILES = $(vim_conf_data) \
		 $(vim_plug_ycm) \
		 $(vimconf_conf_data) \
		 $(ycm_clangd_binary_path)

# data/scripts generated by make (require explicit distribution of source file)
vim_make_data = $(vimrc)
vim_DATA += $(vim_make_data)

vimconf_make_data = $(init) \
		    $(vim_plug)
vimconf_DATA += $(vimconf_make_data)

# variables to support building our output
make_output = $(vimconf_make_data) \
	      $(vim_make_data)

make_sources = $(addsuffix .in,$(make_output))

# explicit source file distribution
EXTRA_DIST = $(make_sources) \
	     $(vimrc_ycm)

CLEANFILES = $(make_output)

# sed command to build data/scripts
# we use % delimiters with vimconfdir below,  because vimrc is processed by
# both configure and make, and we want to prevent configure from substituting
# vimconfdir with $(pkgconfdir)/...
EDIT = -e 's:@vimautoloaddir[@]:$(vimautoloaddir):g' \
       -e 's:%vimconfdir%:$(vimconfdir):g' \
       -e 's:@vimdir[@]:$(vimdir):g' \
       -e 's:@vimpluggeddir[@]:$(vimpluggeddir):g'
