#! /usr/bin/env bash

# functions

source @pkgdatadir@/script-functions

function usage()
{
	cat <<- EOF

	Usage: $me [OPTIONS]

	  -g git version
	  -p configure prefix
	  -e configure exec-prefix
	  -c extra configure flags
	  -C file with extra configure flags
	  -m extra make flags
	  -M file with extra make flags
	  -j make jobs
	  -v verbose output
	  -V print version
	  -h print usage

	Examples:

	$me -g 1.7.4.1 -p $HOME/usr -e $HOME/usr/$(arch)

	EOF
} # usage()

function cleanup()
{
  rm -rf $*
}

me="$(basename $0)"

# options
prefix=''
prefixdir='/usr/local'
exec_prefix=''
configflags=''
makeflags=''
makejobs=''
verbose=''

while getopts "g:p:e:c:C:m:M:j:vVh" opt; do
  case $opt in
    g ) version=$OPTARG ;;
    p ) prefixdir="$OPTARG"; prefix="--prefix=$OPTARG" ;;
    e ) exec_prefix="--exec-prefix=$OPTARG" ;;
    c ) configflags="$configflags $OPTARG" ;;
    C ) configflags="$configflags $(tr '\n' ' ' <$OPTARG)" ;;
    m ) makeflags="$makeflags $OPTARG" ;;
    M ) makeflags="$makeflags $(tr '\n' ' ' <$OPTARG)" ;;
    j ) makejobs="--jobs=$OPTARG" ;;
    v ) verbose='-v' ;;
    V ) print_version $me; exit 0 ;;
    h ) usage; exit 0 ;;
    \? ) usage >/dev/stderr; exit 1 ;;
  esac
done

shift $(($OPTIND - 1))

# sanity check
if [[ -z $version ]]; then
  die "Must specify git version with -g"
fi

# set up work directory
tmpdir=$(mktemp -d)
cruft="$tmpdir"
# clean up cruft on error or exit
trap "cleanup $cruft" ERR EXIT

if ! pushd $tmpdir &>/dev/null; then
  die "Failed to create temporary directory"
fi


tool='git'
toolname="$tool-$version"

if ! dl-git $verbose -g $version; then
  popd &>/dev/null
  die "Failed to download $toolname"
fi

archive="$toolname.tar.gz"

if ! tar -xzf $archive; then
  popd &>/dev/null
  die "Failed to extract $archive"
fi

if ! pushd $toolname &>/dev/null; then
  popd &>/dev/null
  die "Failed to change directory to $toolname"
fi

debug "Running ./configure $prefix $exec_prefix $configflags"

if ! eval ./configure $prefix $exec_prefix $configflags; then
  popd &>/dev/null
  popd &>/dev/null
  die "Failed to configure $toolname"
fi

debug "Running make $makejobs $makeflags"

if ! eval make $makejobs $makeflags; then
  popd &>/dev/null
  popd &>/dev/null
  die "Failed to make $toolname"
fi

debug "Running make $makejobs $makeflags install"

if ! eval make $makejobs $makeflags install; then
  popd &>/dev/null
  popd &>/dev/null
  die "Failed to install $toolname"
fi

completiondir='contrib/completion'
bashcomp="$completiondir/git-completion.bash"
prompt="$completiondir/git-prompt.sh"
destdir="$prefixdir/share/git-core/$completiondir"

if ! install $verbose -d $destdir; then
  popd &>/dev/null
  popd &>/dev/null
  die "Failed to create $destdir"
fi

if ! install $verbose -C $bashcomp $prompt $destdir; then
  popd &>/dev/null
  popd &>/dev/null
  die "Failed to install $bashcomp and/or $prompt"
fi

popd &>/dev/null
popd &>/dev/null

debug "Successfully installed $toolname"
