#! /bin/env bash

# functions

function usage()
{
	cat <<- eof

	Usage: $(basename $0) [OPTIONS]

	  -v git version
	  -p prefix
	  -e exec-prefix
	  -c extra configure flags
	  -C file with extra configure flags
	  -m extra make flags
	  -M file with extra make flags
	  -j make jobs
	  -b bash completion path

	Examples:

	$(basename $0) -v 1.7.4.1 -p $HOME/usr -e $HOME/usr/$(arch)

	eof
} # usage()

function cleanup()
{
  local dir=$1

  if [[ -d $dir ]]; then
    if rm -rf $dir; then
      echo "Removed $dir"
    else
      echo "Failed to clean $dir"
    fi
  fi
}

prefix=""
exec_prefix=""
configflags=""
makeflags=""
makejobs=""
bashcomp=""
srcbashcomp="contrib/completion/git-completion.bash"

while getopts "v:p:e:c:C:m:M:j:b:" opt; do
  case $opt in
    v ) version=$OPTARG ;;
    p ) prefix="--prefix=$OPTARG" ;;
    e ) exec_prefix="--exec-prefix=$OPTARG" ;;
    c ) configflags="$configflags $OPTARG" ;;
    C ) configflags="$configflags $(cat $OPTARG | tr '\n' ' ')" ;;
    m ) makeflags="$makeflags $OPTARG" ;;
    M ) makeflags="$makeflags $(cat $OPTARG | tr '\n' ' ')" ;;
    j ) makejobs="--jobs=$OPTARG" ;;
    b ) bashcomp=$OPTARG ;;
    \? ) usage; exit 1 ;;
  esac
done

shift $(($OPTIND - 1))

if [[ -z $version ]]; then
  echo "Must specify version with -v"
  usage
  exit 1
fi

baseurl="http://www.kernel.org/pub/software/scm"

tmpdir=$(mktemp -d)

if ! pushd $tmpdir; then
  echo "Failed to create temporary directory"
  cleanup $tmpdir
  exit 1
fi

tool="git"
toolname="$tool-$version"
archive="$toolname.tar.bz2"
signature="$archive.sign"
url="$baseurl/$tool/$archive"
signurl="$baseurl/$tool/$signature"

if ! dl-git -v $version; then
  echo "Failed to download $toolname"
  popd
  cleanup $tmpdir
  exit 1
fi

if ! tar -xjf $archive; then
  echo "Failed to extract $archive"
  popd
  cleanup $tmpdir
  exit 1
fi

if ! pushd $toolname; then
  echo "Failed to change directory to $toolname"
  popd
  cleanup $tmpdir
  exit 1
fi

echo
echo "Running ./configure $prefix $exec_prefix $configflags"
echo

if ! eval ./configure $prefix $exec_prefix $configflags; then
  echo "Failed to configure $toolname"
  popd
  cleanup $tmpdir
  exit 1
fi

echo
echo "Running make $makejobs $makeflags"
echo

if ! eval make $makejobs $makeflags; then
  echo "Failed to make $toolname"
  popd
  cleanup $tmpdir
  exit 1
fi

echo
echo "Running make $makejobs $makeflags install"
echo

if ! eval make $makejobs $makeflags install; then
  echo "Failed to install $toolname"
  popd
  cleanup $tmpdir
  exit 1
fi

if [[ -n $bashcomp ]]; then
  if ! install -vCT $srcbashcomp $bashcomp; then
    echo "Failed to install $srcbashcomp to $bashcomp"
  fi
fi

popd

echo "Successfully installed $toolname"

popd
cleanup $tmpdir
