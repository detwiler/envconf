#! /bin/env bash

# functions

function usage()
{
	cat <<- eof

	Usage: $(basename $0) [OPTIONS]

	  -v git version
	  -p prefix
	  -e exec-prefix
	  -f extra configure flags
	  -j make jobs
	  -b bash completion path

	Examples:

	$(basename $0) -v 1.7.4.1 -p $HOME/usr -e $HOME/usr/$(arch)

	eof
} # usage()

prefix=""
exec_prefix=""
flags=""
makejobs=""
bashcomp=""
srcbashcomp="contrib/completion/git-completion.bash"

while getopts "v:p:e:f:j:" opt; do
  case $opt in
    v ) version=$OPTARG ;;
    p ) prefix="--prefix=$OPTARG" ;;
    e ) exec_prefix="--exec-prefix=$OPTARG" ;;
    f ) flags="$flags $OPTARG" ;;
    j ) makejobs="--jobs=$OPTARG" ;;
    j ) bashcomp=$OPTARG ;;
    \? ) usage; exit 1 ;;
  esac
done

shift $(($OPTIND - 1))

if [[ -z $version ]]; then
  echo "Must specify version with -v"
  usage
  exit 1
fi

baseurl="http://www.kernel.org/pub/software/scm"

tmpdir=$(mktemp -d)

if ! pushd $tmpdir; then
  echo "Failed to create temporary directory"
  exit 1
fi

tool="git"
toolname="$tool-$version"
archive="$toolname.tar.bz2"
url="$baseurl/$tool/$archive"

if ! wget $url; then
  echo "Failed to donwload $url"
  exit 1
fi

if ! tar -xjf $archive; then
  echo "Failed to extract $archive"
  exit 1
fi

if ! pushd $toolname; then
  echo "Failed to change directory to $toolname"
  exit 1
fi

echo "Running ./configure $prefix $exec_prefix $flags"

if ! ./configure $prefix $exec_prefix $flags; then
  echo "Failed to configure $toolname"
  exit 1
fi

if ! make $makejobs; then
  echo "Failed to make $toolname"
  exit 1
fi

if ! make $makejobs install; then
  echo "Failed to install $toolname"
  exit 1
fi

if [[ -n $bashcomp ]]; then
  if ! cp -vf $srcbashcomp $bashcomp; then
    echo "Failed to copy $srcbashcomp to $bashcomp"
  fi
fi

popd

if ! rm -rf $toolname $archive; then
  echo "Failed to clean $toolname"
  exit 1
fi

echo "Successfully installed $toolname"

popd

if ! rm -rf $tmpdir; then
  echo "Failed to clean $tmpdir"
  exit 1
fi
